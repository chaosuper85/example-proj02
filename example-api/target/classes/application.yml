############################################################
#
# web访问端口号  约定：8088
#
############################################################
server:
  #port: 8090
  tomcat:
    uri-encoding: UTF-8
  max-http-header-size: 80KB

######################################################################
#
#  配置数据源信息
#
######################################################################
spring:
  data:
    #  elasticsearch:
    #  cluster-name: es-cluster
    #  cluster-nodes: 127.0.0.1:9300
  kafka:
    bootstrap-servers: 127.0.0.1:9092  #bootstrap-servers：连接kafka的地址，多个地址用逗号分隔
    consumer:
      group-id: myGroup
      enable-auto-commit: true
      auto-commit-interval: 100ms
      properties:
        session.timeout.ms: 15000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    producer:
      retries: 0 #若设置大于0的值，客户端会将发送失败的记录重新发送
      batch-size: 16384 #当将多个记录被发送到同一个分区时， Producer 将尝试将记录组合到更少的请求中。这有助于提升客户端和服务器端的性能。这个配置控制一个批次的默认大小（以字节为单位）。16384是缺省的配置
      buffer-memory: 33554432 #Producer 用来缓冲等待被发送到服务器的记录的总字节数，33554432是缺省配置
      key-serializer: org.apache.kafka.common.serialization.StringSerializer #关键字的序列化类
      value-serializer: org.apache.kafka.common.serialization.StringSerializer #值的序列化类


  datasource: # 数据源的相关配置
    #type: com.zaxxer.hikari.HikariDataSource          # 数据源类型：HikariCP
    #driver-class-name: com.mysql.cj.jdbc.Driver         # mysql驱动
    #    url: jdbc:mysql://localhost:3306/foodieshopdev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    #    username: root
    #    password:
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP   # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
      connection-test-query: SELECT 1

  profiles:
    active: dev
  application:
    name: example-proj02


######################################################################
#
#  mybatis 配置
#
######################################################################
mybatis:
  type-aliases-package: com.example.pojo   #所有pojo类所在路径
  mapper-locations: classpath:mapper/*.xml #mapper映射文件
  configuration:
    jdbc-type-for-null: null
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
mapper:
  mappers: com.example.my.mapper.MyMapper
  not-empty: false
  identity: MYSQL
# 分页插件配置
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true


#app:
#  id: springboot-appollo
  #apollo:
  #meta: http://127.0.0.1:8080
    #bootstrap:
    #enabled: true
    #eagerLoad:
  #enabled: true
  #这里说明在将该项目 com目录下的日志，都采用info模式输出
    #logging:
    #level:
  #com: info
xxl:
  job:
    #admin:
      # 地址为刚刚配置的调度中心的访问地址
    #  addresses: http://127.0.0.1:8080/xxl-job-admin
    #executor:
      # 自定义appName（执行器名称）
    #  appname: xxljobexample
      # ip 可以写 （程序跑在的机器ip上），也可以不写
      # ip:
      # port:
      # 执行器日志文件存储路径
    #  logpath: /Users/zhuchao/demo-projects/example-proj02/log/jobhandler
      # 设置日志过期时间  -1表示永不过期
    #  logretentiondays: -1
    #  accessToken:




